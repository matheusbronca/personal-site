---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import Slider from "@components/islands/Slider.svelte";
import TechStack from "@components/TechStack.astro";
import { AstroSeo } from "@astrolib/seo";

import type { StackKey } from "@components/TechStack.astro";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const hasStack = !!project.data.stack;
const { Content } = await project.render();
---

<AstroSeo
  openGraph={{
    images: [
      {
        url: `https://matheusbronca.com${project.data.sliderImgs?.[0].src ?? project.data.thumbnailImg.url}`,
        width: 1200,
        height: 630,
        alt: project.data.description,
        type: "image/jpeg",
      },
    ],
  }}
/>
<PageLayout title={project.data.title} description={project.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects"> Back to projects </BackToPrev>
    </div>
    <div class="space-y-1 mt-10 mb-5">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={project.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(project.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {project.data.title}
      </div>
    </div>
    <Slider
      client:load
      imgs={project.data.sliderImgs}
      demoUrl={project.data.demoURL}
    />
    <article class="animate">
      <Content />
      {hasStack && <h4>Built with</h4>}
      <div class="flex flex-wrap gap-2 items-center">
        {
          project.data.stack?.map((s: StackKey) => {
            return <TechStack stack={s} />;
          })
        }
      </div>
    </article>
  </Container>
</PageLayout>
